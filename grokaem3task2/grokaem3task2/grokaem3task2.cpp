#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

// Функция для разделения массива (часть быстрой сортировки)
int разделение(vector<int>& массив, int левый, int правый) {
    int опора = массив[правый]; // выбираем последний элемент как опорный
    int i = левый - 1; // индекс меньшего элемента

    for (int j = левый; j <= правый - 1; j++) {
        // Если текущий элемент меньше или равен опорному
        if (массив[j] <= опора) {
            i++; // увеличиваем индекс меньшего элемента
            swap(массив[i], массив[j]);
        }
    }
    swap(массив[i + 1], массив[правый]);
    return (i + 1);
}

// Основная функция быстрой сортировки
void быстраяСортировка(vector<int>& массив, int левый, int правый) {
    if (левый < правый) {
        // Индекс разделения, элемент на этом месте теперь в правильной позиции
        int индексРазделения = разделение(массив, левый, правый);

        // Рекурсивно сортируем элементы до и после разделения
        быстраяСортировка(массив, левый, индексРазделения - 1);
        быстраяСортировка(массив, индексРазделения + 1, правый);
    }
}

// Функция для генерации случайного числа в диапазоне [min, max]
int случайноеЧисло(int минимум, int максимум) {
    return минимум + rand() % (максимум - минимум + 1);
}

// Функция для вывода массива
void вывестиМассив(const vector<int>& массив, const string& сообщение) {
    cout << сообщение << endl;
    for (size_t i = 0; i < массив.size(); i++) {
        cout << массив[i] << " ";
        if ((i + 1) % 15 == 0) cout << endl; // перенос строки каждые 15 элементов
    }
    cout << endl << endl;
}

// Функция для проверки корректности сортировки
bool проверитьСортировку(const vector<int>& массив) {
    for (size_t i = 1; i < массив.size(); i++) {
        if (массив[i] < массив[i - 1]) {
            return false;
        }
    }
    return true;
}

int main() {
    setlocale(LC_ALL, "Russian");

    const int РАЗМЕР_МАССИВА = 20; // Можно изменить на нужный размер
    const int МИНИМУМ = 50;
    const int МАКСИМУМ = 100;

    vector<int> массив(РАЗМЕР_МАССИВА);

    // Инициализация генератора случайных чисел
    srand(time(0));

    // Заполнение массива случайными числами в диапазоне {50, 100}
    for (int i = 0; i < РАЗМЕР_МАССИВА; i++) {
        массив[i] = случайноеЧисло(МИНИМУМ, МАКСИМУМ);
    }

    // Вывод исходного массива
    вывестиМассив(массив, "Исходный массив:");

    // Сортировка массива
    быстраяСортировка(массив, 0, РАЗМЕР_МАССИВА - 1);

    // Вывод отсортированного массива
    вывестиМассив(массив, "Отсортированный массив:");

    // Проверка корректности сортировки
    if (проверитьСортировку(массив)) {
        cout << "✓ Сортировка выполнена корректно! Массив отсортирован по возрастанию." << endl;
    }
    else {
        cout << "✗ Ошибка в сортировке!" << endl;
    }

    return 0;
}